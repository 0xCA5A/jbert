buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:1.12.2'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "nebula.ospackage" version "4.8.0"
}

apply plugin: 'nebula.deb'

description "jbert control application"
version "0.3.0"
group "ch.jbert"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    // Micronaut generated dependencies
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compileOnly "org.graalvm.nativeimage:svm"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-management"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "org:jaudiotagger:2.0.3"
    implementation 'com.google.guava:guava:28.2-jre'
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.mockito:mockito-junit-jupiter:3.3.3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    // Sub-Project dependencies
    compile project(':core')
}

test.classpath += configurations.developmentOnly

mainClassName = "ch.jbert.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.toVersion('1.8')
    targetCompatibility = JavaVersion.toVersion('1.8')
}

run.classpath += configurations.developmentOnly
run.jvmArgs(
    "-noverify",
    "-XX:TieredStopAtLevel=1",
    "-Dcom.sun.management.jmxremote",
    "-Dcom.sun.management.jmxremote.port=7777",
    "-Dcom.sun.management.jmxremote.local.only=false",
    "-Dcom.sun.management.jmxremote.authenticate=false",
    "-Dcom.sun.management.jmxremote.ssl=false")

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
    options.compilerArgs.add("-deprecation")
    options.compilerArgs.add("-Werror")
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,redoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

shadowJar {
    mergeServiceFiles()
}

task jbertDebPackage(type: Deb) {
    maintainer "samuelcasa9@gmail.com"
    user "jbert"
    permissionGroup "users"
    preDepends "openjdk-8-jre-headless"

    into '/usr/share/jbert'

    from('build/libs') {
        into 'lib'
    }
    from('build/scriptsShadow') {
        into 'bin'
        exclude '*.bat'
        fileMode 0550
    }
    from('systemd') {
        into 'bin'
    }
    from('src/main/resources') {
        fileType CONFIG | NOREPLACE
        into 'conf'
    }

    link('/lib/systemd/system/jbert.service', '/usr/share/jbert/bin/jbert.service')
    link('/etc/default/jbert', '/usr/share/jbert/bin/environment')
}
