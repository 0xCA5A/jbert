openapi: "3.0.0"
info:
  version: 0.1.0
  title: jBert
  description: jBert control application REST interface specification
  license:
    name: MIT

paths:
  /api/config:
    get:
      summary: Returns the current system configuration
      responses:
        '200':
          description: JSON system configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Config"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/status:
    get:
      summary: Returns general system status / information
      responses:
        '200':
          description: JSON structured system information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/playlists:
    get:
      summary: List all playlists
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayLists"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new playlist
      responses:
        '201':
          description: New playlist successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/playlists/{playlistId}:
    get:
      summary: List all playlists
      parameters:
        - name: playlistId
          in: path
          required: true
          description: The id of the playlist
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update an existing playlist
      parameters:
        - name: playlistId
          in: path
          required: true
          description: The id of the playlist to update
          schema:
            type: integer
        - name: playlist
          in: query
          required: true
          description: The playlist data
          schema:
            $ref: "#/components/schemas/Playlist"
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an existing playlist
      parameters:
        - name: playlistId
          in: path
          required: true
          description: The id of the playlist to update
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/playlists/{playlistId}/listTracks:
    get:
      summary: List all tracks in the playlist
      parameters:
        - name: playlistId
          in: path
          required: true
          description: The id of the playlist
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tracks"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/playlists/{playlistId}/addTrack:
    post:
      summary: Add a track to an existing playlist
      parameters:
        - name: playlistId
          in: path
          required: true
          description: The id of the playlist to update
          schema:
            type: integer
        - name: track
          in: query
          description: The track meta information
          schema:
            $ref: "#/components/schemas/Track"
        - name: trackData
          in: query
          description: The track audio data
          schema:
            type: string
            format: binary
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/playlists/{playlistId}/removeTrack:
    delete:
      summary: Remove a track from an existing playlist
      parameters:
        - name: playlistId
          in: path
          required: true
          description: The id of the playlist to update
          schema:
            type: integer
        - name: track
          in: query
          description: The track meta information
          schema:
            $ref: "#/components/schemas/Track"
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Status:
      properties:
        systemStatus:
          $ref: "#/components/schemas/SystemStatus"
        playerStatus:
          $ref: "#/components/schemas/PlayerStatus"
        rfidStatus:
          $ref: "#/components/schemas/RfidStatus"

    SystemStatus:
      properties:
        systemLoad:
          type: number
          format: float
        memUsage:
          type: number
          format: float
        uptime:
          type: integer
          format: int32

    PlayerStatus:
      properties:
        volume:
          type: number
          format: float
        numberOfPlaylists:
          type: integer
          format: int32
        numberOfTracks:
          type: integer
          format: int32

    RfidStatus:
      properties:
        enabled:
          type: boolean

    Config:
      properties:
        systemLoad:
          type: number
          format: float
        memUsage:
          type: number
          format: float

    Playlist:
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        numberOfTracks:
          type: integer
          format: int32

    Playlists:
      type: array
      items:
        $ref: "#/components/schemas/Playlist"

    Track:
      properties:
        uuid:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 30
        artist:
          type: string
          maxLength: 30
        album:
          type: string
          maxLength: 30
        year:
          type: integer
          format: int32
        genre:
          type: string
        comment:
          type: string
          maxLength: 30
        duration:
          type: integer
          format: int32

    Tracks:
      type: array
      items:
        $ref: "#/components/schemas/Track"

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
